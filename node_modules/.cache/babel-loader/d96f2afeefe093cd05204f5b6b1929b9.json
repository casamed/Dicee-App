{"ast":null,"code":"var _jsxFileName = \"/Users/caseymedford/Desktop/ReactApps/projectx/src/App.js\";\nimport React, { Component } from 'react';\nimport Roll from './Roll.js';\nimport './App.css';\nimport Dice from './Dice.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateDice = event => {\n      var randomDiceIndex1 = Math.floor(Math.random() * Math.floor(6));\n      var randomDiceIndex2 = Math.floor(Math.random() * Math.floor(6));\n      console.log(\"Button has been pressed \".concat(randomDiceIndex1, \" and \").concat(randomDiceIndex2));\n      this.setState({\n        diceIndicies,\n        [0]: randomDiceIndex1\n      });\n      this.setState({\n        diceIndicies,\n        [1]: randomDiceIndex2\n      });\n    };\n\n    this.state = {\n      diceIndicies: [0, 1]\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          diceIndexI = _this$state.diceIndexI,\n          diceIndexII = _this$state.diceIndexII;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Dice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"), React.createElement(Roll, {\n      whenPressed: this.updateDice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/caseymedford/Desktop/ReactApps/projectx/src/App.js"],"names":["React","Component","Roll","Dice","App","constructor","updateDice","event","randomDiceIndex1","Math","floor","random","randomDiceIndex2","console","log","setState","diceIndicies","state","render","diceIndexI","diceIndexII"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,UAPc,GAOAC,KAAD,IAAW;AACtB,UAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAAvB;AACA,UAAIE,gBAAgB,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,mCAAuCN,gBAAvC,kBAA+DI,gBAA/D;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,YAAF;AAAe,SAAC,CAAD,GAAMR;AAArB,OAAd;AACA,WAAKO,QAAL,CAAc;AAAEC,QAAAA,YAAF;AAAe,SAAC,CAAD,GAAMJ;AAArB,OAAd;AACH,KAbe;;AAEV,SAAKK,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAG,CAAH;AADL,KAAb;AAGH;;AAWDE,EAAAA,MAAM,GAAI;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACAE,UADA,eACAA,UADA;AAAA,UACYC,WADZ,eACYA,WADZ;AAER,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADP,yBAFF,EAKE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAKd,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAWD;;AA9ByB;;AAiC5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Roll from './Roll.js'\nimport './App.css';\nimport Dice from './Dice.js'\n\nclass App extends Component {\n  constructor() {\n      super()\n      this.state = {\n          diceIndicies: [0,1]\n      }\n  }\n\n  updateDice = (event) => {\n    var randomDiceIndex1 = Math.floor(Math.random() * Math.floor(6));\n    var randomDiceIndex2 = Math.floor(Math.random() * Math.floor(6));\n    console.log(`Button has been pressed ${randomDiceIndex1} and ${randomDiceIndex2}`);\n    this.setState({ diceIndicies,[0]:  randomDiceIndex1 })\n    this.setState({ diceIndicies,[1]:  randomDiceIndex2 })\n}\n\n\n  render () {\n    const { diceIndexI, diceIndexII } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <Dice />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <Roll whenPressed={this.updateDice}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}